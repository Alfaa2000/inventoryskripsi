<?php

namespace App\Http\Controllers\Pos;

use App\Http\Controllers\Controller;
use Illuminate\Http\Request;
use App\Models\Customer;
use Illuminate\Support\Facades\Auth;
use Illuminate\Support\Carbon;

class CustomerController extends Controller
{
    public function CustomerAll(){
        $customers = Customer::latest()->get();
        return view('backend.customer.customer_all', compact('customers'));
    }
    


    public function CustomerAdd(){
        return view('backend.customer.customer_add');

    }

    public function CustomerStore(Request $request ){
        Customer::insert([
            'name' => $request->name,
            'mobile_no' => $request->mobile_no,
            'informasimata' => $request->informasimata,
            'email' => $request->email,
            'address' => $request->address,
            'created_by' => Auth::user()->id,
            'created_at' => Carbon::now(),


        ]);

        $notification = array(
            'message' => 'Data Berhasil Ditambah',
            'alert-type' => 'success'
        );

        return redirect()->route('customer.all')->with($notification);
    } //end methode

    public function CustomerEdit($id){

        $customer = Customer::findOrFail($id);
        return view('backend.customer.customer_edit',compact('customer'));

    }

    public function CustomerUpdate(Request $request){

        $customer_id = $request->id;

        Customer::findOrfail($customer_id)->update([
            'name' => $request->name,
            'informasimata' => $request->informasimata,
            'mobile_no' => $request->mobile_no,
            'email' => $request->email,
            'address' => $request->address,
            'created_by' => Auth::user()->id,
            'updated_at' => Carbon::now(),


        ]);

        $notification = array(
            'message' => 'Data Berhasil Diubah',
            'alert-type' => 'success'
        );

        return redirect()->route('supplier.all')->with($notification);
    } //end methode

    public function CustomerDelete($id){
        Customer::findOrFail($id)->delete();
        $notification = array(
            'message' => 'Data Berhasil Dihapus',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);
    

    }
}

